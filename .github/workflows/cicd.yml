name: CI/CD for Dockerized Network Security ML App

on:
  push:
    branches: [ main ]
    paths:
      - 'winequality_pipeline/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'winequality_pipeline/**'

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint Code
        run: echo "networksecurity repository"

      - name: Run Unit Tests
        run: echo "Running docker build"


  build-and-publish:
    needs: integration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: winequality_pipeline/
        file: winequality_pipeline/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/winequality_pipeline:latest

    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}



  deploy-to-ec2:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/winequality_pipeline:latest
          docker stop winequality || true
          docker rm winequality || true
          docker run -d --name winequality -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/winequality_pipeline:latest
        EOF